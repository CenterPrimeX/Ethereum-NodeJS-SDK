{"version":3,"sources":["../src/iterateJsdoc.js"],"names":["globalState","Map","skipSeeLink","parser","str","data","tag","match","parseComment","commentNode","indent","trim","value","parsers","commentParser","PARSERS","parse_tag","includes","parse_type","parse_name","errors","length","result","description","undefined","source","getBasicUtils","context","tagNamePreference","mode","utils","reportSettings","message","report","loc","start","column","line","getPreferredTagNameObject","tagName","ret","jsdocUtils","getPreferredTagName","isObject","replacement","blocked","getUtils","node","jsdoc","jsdocNode","settings","iteratingAll","ruleConfig","ancestors","getAncestors","sourceCode","getSourceCode","overrideReplacesDocs","implementsReplacesDocs","augmentsExtendsReplacesDocs","maxLines","minLines","isIteratingFunction","type","isVirtualFunction","hasATag","stringify","tagBlock","getIndent","noTrim","lastTag","tags","replace","slice","reportJSDoc","msg","handler","fixer","replaceText","getFunctionParameterNames","isConstructor","parent","kind","isGetter","isSetter","getJsdocTagsDeep","name","getJsdocTags","skipReportingBlockedTag","allowObjectReturn","defaultMessage","hasTag","getTags","isValidTag","definedTags","hasSchemaOption","prop","schemaProperties","meta","schema","properties","_","get","default","avoidDocs","classHasTag","exemptedBy","getPresentTags","tagMustHaveEitherTypeOrNamePosition","tagMightHaveEitherTypeOrNamePosition","tagMustHaveNamePosition","tagMightHaveNamePosition","tagMustHaveTypePosition","tagMightHaveTypePosition","isNamepathDefiningTag","hasDefinedTypeReturnTag","hasReturnValue","isAsync","async","filterTags","item","tagList","filter","getTagsByType","hasOptionTag","Boolean","getClassNode","reverse","find","getClassJsdoc","classNode","classJsdocNode","repeat","classJsdoc","forEachPreferredTag","arrayHandler","targetTagName","matchingJsdocTags","forEach","matchingJsdocTag","getSettings","ignorePrivate","Number","preferredTypes","makeReport","fix","jsdocLoc","lineNumber","end","colNumber","iterate","lines","iterator","state","sourceLine","charAt","checkPrivate","some","iterateAllJsdocs","trackedJsdocs","callIterator","jsdocNodes","lastCall","test","getText","exit","create","reducedNode","comment","nonComment","push","allComments","getAllComments","untrackedJSdoc","checkFile","iterateJsdoc","metaType","TypeError","contexts","contextDefaults","enforcedContexts","checkJsdoc","getContextObject","ArrowFunctionExpression","FunctionDeclaration","FunctionExpression"],"mappings":"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","sourcesContent":["// eslint-disable-next-line import/no-named-default\nimport {default as commentParser, stringify as commentStringify} from 'comment-parser';\nimport _ from 'lodash';\nimport jsdocUtils from './jsdocUtils';\nimport {getJSDocComment, getReducedASTNode} from './eslint/getJSDocComment';\n\nconst globalState = new Map();\n\nconst skipSeeLink = (parser) => {\n  return (str, data) => {\n    if (data.tag === 'see' && str.match(/\\{@link.+?\\}/u)) {\n      return null;\n    }\n\n    return parser(str, data);\n  };\n};\n\n/**\n *\n * @param {object} commentNode\n * @param {string} indent Whitespace\n * @param {boolean} [trim=true]\n * @returns {object}\n */\nconst parseComment = (commentNode, indent, trim = true) => {\n  // Preserve JSDoc block start/end indentation.\n  return commentParser(`${indent}/*${commentNode.value}${indent}*/`, {\n    // @see https://github.com/yavorskiy/comment-parser/issues/21\n    parsers: [\n      commentParser.PARSERS.parse_tag,\n      skipSeeLink(\n        (str, data) => {\n          if (['default', 'defaultvalue'].includes(data.tag)) {\n            return null;\n          }\n\n          return commentParser.PARSERS.parse_type(str, data);\n        },\n      ),\n      skipSeeLink(\n        (str, data) => {\n          if ([\n            'example', 'return', 'returns', 'throws', 'exception',\n            'access', 'version', 'since', 'license', 'author',\n            'default', 'defaultvalue',\n          ].includes(data.tag)) {\n            return null;\n          }\n\n          return commentParser.PARSERS.parse_name(str, data);\n        },\n      ),\n\n      // parse_description\n      (str, data) => {\n        // Only expected throw in previous step is if bad name (i.e.,\n        //   missing end bracket on optional name), but `@example`\n        //  skips name parsing\n        /* istanbul ignore next */\n        if (data.errors && data.errors.length) {\n          return null;\n        }\n\n        // Tweak original regex to capture only single optional space\n        const result = str.match(/^ ?((.|\\s)+)?/u);\n\n        // Always has at least whitespace due to `indent` we've added\n        /* istanbul ignore next */\n        if (result) {\n          return {\n            data: {\n              description: result[1] === undefined ? '' : result[1],\n            },\n            source: result[0],\n          };\n        }\n\n        // Always has at least whitespace due to `indent` we've added\n        /* istanbul ignore next */\n        return null;\n      },\n    ],\n    trim,\n  })[0] || {};\n};\n\nconst getBasicUtils = (context, {tagNamePreference, mode}) => {\n  const utils = {};\n  utils.reportSettings = (message) => {\n    context.report({\n      loc: {\n        start: {\n          column: 1,\n          line: 1,\n        },\n      },\n      message,\n    });\n  };\n\n  utils.getPreferredTagNameObject = ({tagName}) => {\n    const ret = jsdocUtils.getPreferredTagName(context, mode, tagName, tagNamePreference);\n    const isObject = ret && typeof ret === 'object';\n    if (ret === false || isObject && !ret.replacement) {\n      return {\n        blocked: true,\n        tagName,\n      };\n    }\n\n    return ret;\n  };\n\n  return utils;\n};\n\nconst getUtils = (\n  node,\n  jsdoc,\n  jsdocNode,\n  settings,\n  report,\n  context,\n  iteratingAll,\n  ruleConfig,\n) => {\n  const ancestors = context.getAncestors();\n  const sourceCode = context.getSourceCode();\n\n  const utils = getBasicUtils(context, settings);\n\n  const {\n    tagNamePreference,\n    overrideReplacesDocs,\n    implementsReplacesDocs,\n    augmentsExtendsReplacesDocs,\n    maxLines,\n    minLines,\n    mode,\n  } = settings;\n\n  utils.isIteratingFunction = () => {\n    return !iteratingAll || [\n      'ArrowFunctionExpression',\n      'FunctionDeclaration',\n      'FunctionExpression',\n    ].includes(node && node.type);\n  };\n\n  utils.isVirtualFunction = () => {\n    return iteratingAll && utils.hasATag(['callback', 'function', 'func', 'method']);\n  };\n\n  utils.stringify = (tagBlock) => {\n    const indent = jsdocUtils.getIndent(sourceCode);\n    if (ruleConfig.noTrim) {\n      const lastTag = tagBlock.tags[tagBlock.tags.length - 1];\n      lastTag.description = lastTag.description.replace(/\\n$/, '');\n    }\n\n    return commentStringify([tagBlock], {indent}).slice(indent.length - 1);\n  };\n\n  utils.reportJSDoc = (msg, tag, handler) => {\n    report(msg, handler ? (fixer) => {\n      handler();\n      const replacement = utils.stringify(jsdoc);\n\n      return fixer.replaceText(jsdocNode, replacement);\n    } : null, tag);\n  };\n\n  utils.getFunctionParameterNames = () => {\n    return jsdocUtils.getFunctionParameterNames(node);\n  };\n\n  utils.isConstructor = () => {\n    return node && node.parent && node.parent.kind === 'constructor';\n  };\n\n  utils.isGetter = () => {\n    return node && node.parent.kind === 'get';\n  };\n\n  utils.isSetter = () => {\n    return node && node.parent.kind === 'set';\n  };\n\n  utils.getJsdocTagsDeep = (tagName) => {\n    const name = utils.getPreferredTagName({tagName});\n    if (!name) {\n      return false;\n    }\n\n    return jsdocUtils.getJsdocTagsDeep(jsdoc, name);\n  };\n\n  utils.getJsdocTags = (tagName) => {\n    const name = utils.getPreferredTagName({tagName});\n    if (!name) {\n      return false;\n    }\n\n    return jsdocUtils.getJsdocTags(jsdoc, name);\n  };\n\n  utils.getPreferredTagName = ({tagName, skipReportingBlockedTag = false, allowObjectReturn = false, defaultMessage = `Unexpected tag \\`@${tagName}\\``}) => {\n    const ret = jsdocUtils.getPreferredTagName(context, mode, tagName, tagNamePreference);\n    const isObject = ret && typeof ret === 'object';\n    if (utils.hasTag(tagName) && (ret === false || isObject && !ret.replacement)) {\n      if (skipReportingBlockedTag) {\n        return {\n          blocked: true,\n          tagName,\n        };\n      }\n      const message = isObject && ret.message || defaultMessage;\n      report(message, null, utils.getTags(tagName)[0]);\n\n      return false;\n    }\n\n    return isObject && !allowObjectReturn ? ret.replacement : ret;\n  };\n\n  utils.isValidTag = (name, definedTags) => {\n    return jsdocUtils.isValidTag(context, mode, name, definedTags);\n  };\n\n  utils.hasATag = (name) => {\n    return jsdocUtils.hasATag(jsdoc, name);\n  };\n\n  utils.hasTag = (name) => {\n    return jsdocUtils.hasTag(jsdoc, name);\n  };\n\n  const hasSchemaOption = (prop) => {\n    const schemaProperties = ruleConfig.meta.schema[0].properties;\n\n    return _.get(\n      context,\n      `options[0].${prop}`,\n      schemaProperties[prop] && schemaProperties[prop].default,\n    );\n  };\n\n  // eslint-disable-next-line complexity\n  utils.avoidDocs = () => {\n    if (\n      overrideReplacesDocs !== false &&\n        (utils.hasTag('override') || utils.classHasTag('override')) ||\n      implementsReplacesDocs !== false &&\n        (utils.hasTag('implements') || utils.classHasTag('implements')) ||\n\n      augmentsExtendsReplacesDocs &&\n        (utils.hasATag(['augments', 'extends']) ||\n          utils.classHasTag('augments') ||\n            utils.classHasTag('extends'))) {\n      return true;\n    }\n\n    if (\n      !hasSchemaOption('checkConstructors') &&\n        (\n          utils.isConstructor() ||\n          utils.hasATag([\n            'class',\n            'constructor',\n          ])) ||\n      !hasSchemaOption('checkGetters') &&\n        utils.isGetter() ||\n      !hasSchemaOption('checkSetters') &&\n        utils.isSetter()) {\n      return true;\n    }\n\n    const exemptedBy = _.get(\n      context, 'options[0].exemptedBy', [\n        'inheritDoc',\n        ...settings.mode === 'closure' ? [] : ['inheritdoc'],\n      ],\n    );\n    if (exemptedBy.length && utils.getPresentTags(exemptedBy).length) {\n      return true;\n    }\n\n    return false;\n  };\n\n  utils.tagMustHaveEitherTypeOrNamePosition = (tagName) => {\n    return jsdocUtils.tagMustHaveEitherTypeOrNamePosition(tagName);\n  };\n\n  utils.tagMightHaveEitherTypeOrNamePosition = (tagName) => {\n    return jsdocUtils.tagMightHaveEitherTypeOrNamePosition(mode, tagName);\n  };\n\n  utils.tagMustHaveNamePosition = (tagName) => {\n    return jsdocUtils.tagMustHaveNamePosition(tagName);\n  };\n\n  utils.tagMightHaveNamePosition = (tagName) => {\n    return jsdocUtils.tagMightHaveNamePosition(tagName);\n  };\n\n  utils.tagMustHaveTypePosition = (tagName) => {\n    return jsdocUtils.tagMustHaveTypePosition(mode, tagName);\n  };\n\n  utils.tagMightHaveTypePosition = (tagName) => {\n    return jsdocUtils.tagMightHaveTypePosition(mode, tagName);\n  };\n\n  utils.isNamepathDefiningTag = (tagName) => {\n    return jsdocUtils.isNamepathDefiningTag(tagName);\n  };\n\n  utils.hasDefinedTypeReturnTag = (tag) => {\n    return jsdocUtils.hasDefinedTypeReturnTag(tag);\n  };\n\n  utils.hasReturnValue = () => {\n    return jsdocUtils.hasReturnValue(node);\n  };\n\n  utils.isAsync = () => {\n    return node.async;\n  };\n\n  utils.getTags = (tagName) => {\n    return utils.filterTags((item) => {\n      return item.tag === tagName;\n    });\n  };\n\n  utils.getPresentTags = (tagList) => {\n    return utils.filterTags((tag) => {\n      return tagList.includes(tag.tag);\n    });\n  };\n\n  utils.filterTags = (filter) => {\n    return jsdocUtils.filterTags(jsdoc.tags, filter);\n  };\n\n  utils.getTagsByType = (tags) => {\n    return jsdocUtils.getTagsByType(context, mode, tags, tagNamePreference);\n  };\n\n  utils.hasOptionTag = (tagName) => {\n    const tags = _.get(context, 'options[0].tags');\n\n    return Boolean(tags && tags.includes(tagName));\n  };\n\n  utils.getClassNode = () => {\n    return [...ancestors, node].reverse().find((parent) => {\n      return parent && ['ClassDeclaration', 'ClassExpression'].includes(parent.type);\n    }) || null;\n  };\n\n  utils.getClassJsdoc = () => {\n    const classNode = utils.getClassNode();\n\n    if (!classNode) {\n      return null;\n    }\n\n    const classJsdocNode = getJSDocComment(sourceCode, classNode, {\n      maxLines,\n      minLines,\n    });\n\n    if (classJsdocNode) {\n      const indent = ' '.repeat(classJsdocNode.loc.start.column);\n\n      return parseComment(classJsdocNode, indent);\n    }\n\n    return null;\n  };\n\n  utils.classHasTag = (tagName) => {\n    const classJsdoc = utils.getClassJsdoc();\n\n    return Boolean(classJsdoc) && jsdocUtils.hasTag(classJsdoc, tagName);\n  };\n\n  utils.forEachPreferredTag = (tagName, arrayHandler, skipReportingBlockedTag = false) => {\n    const targetTagName = utils.getPreferredTagName({\n      skipReportingBlockedTag,\n      tagName,\n    });\n    if (!targetTagName ||\n      skipReportingBlockedTag && targetTagName && typeof targetTagName === 'object'\n    ) {\n      return;\n    }\n    const matchingJsdocTags = _.filter(jsdoc.tags || [], {\n      tag: targetTagName,\n    });\n\n    matchingJsdocTags.forEach((matchingJsdocTag) => {\n      arrayHandler(matchingJsdocTag, targetTagName);\n    });\n  };\n\n  return utils;\n};\n\nconst getSettings = (context) => {\n  /* eslint-disable sort-keys-fix/sort-keys-fix */\n  const settings = {\n    // All rules\n    ignorePrivate: Boolean(_.get(context, 'settings.jsdoc.ignorePrivate')),\n    maxLines: Number(_.get(context, 'settings.jsdoc.maxLines', 1)),\n    minLines: Number(_.get(context, 'settings.jsdoc.minLines', 0)),\n\n    // `check-tag-names` and many returns/param rules\n    tagNamePreference: _.get(context, 'settings.jsdoc.tagNamePreference') || {},\n\n    // `check-types` and `no-undefined-types`\n    preferredTypes: _.get(context, 'settings.jsdoc.preferredTypes') || {},\n\n    // `require-param`, `require-description`, `require-example`, `require-returns`\n    overrideReplacesDocs: _.get(context, 'settings.jsdoc.overrideReplacesDocs'),\n    implementsReplacesDocs: _.get(context, 'settings.jsdoc.implementsReplacesDocs'),\n    augmentsExtendsReplacesDocs: _.get(context, 'settings.jsdoc.augmentsExtendsReplacesDocs'),\n\n    // Many rules, e.g., `check-tag-names`\n    mode: _.get(context, 'settings.jsdoc.mode') || 'jsdoc',\n  };\n  /* eslint-enable sort-keys-fix/sort-keys-fix */\n\n  return settings;\n};\n\n/**\n * Create the report function\n *\n * @param {object} context\n * @param {object} commentNode\n */\nconst makeReport = (context, commentNode) => {\n  const report = (message, fix = null, jsdocLoc = null, data = null) => {\n    let loc;\n\n    if (jsdocLoc) {\n      const lineNumber = commentNode.loc.start.line + jsdocLoc.line;\n\n      loc = {\n        end: {line: lineNumber},\n        start: {line: lineNumber},\n      };\n      if (jsdocLoc.column) {\n        const colNumber = commentNode.loc.start.column + jsdocLoc.column;\n\n        loc.end.column = colNumber;\n        loc.start.column = colNumber;\n      }\n    }\n\n    context.report({\n      data,\n      fix,\n      loc,\n      message,\n      node: commentNode,\n    });\n  };\n\n  return report;\n};\n\n/**\n * @typedef {ReturnType<typeof getUtils>} Utils\n * @typedef {ReturnType<typeof getSettings>} Settings\n * @typedef {(\n *   arg: {\n *     context: object,\n *     sourceCode: object,\n *     indent: string,\n *     jsdoc: object,\n *     jsdocNode: object,\n *     node: object | null,\n *     report: ReturnType<typeof makeReport>,\n *     settings: Settings,\n *     utils: Utils,\n *   }\n * ) => any } JsdocVisitor\n */\n\nconst iterate = (\n  ruleConfig, context, lines, jsdocNode, node, settings,\n  sourceCode, iterator, state, iteratingAll,\n) => {\n  const sourceLine = lines[jsdocNode.loc.start.line - 1];\n  const indent = sourceLine.charAt(0).repeat(jsdocNode.loc.start.column);\n  const jsdoc = parseComment(jsdocNode, indent, !ruleConfig.noTrim);\n  const report = makeReport(context, jsdocNode);\n\n  const utils = getUtils(\n    node,\n    jsdoc,\n    jsdocNode,\n    settings,\n    report,\n    context,\n    iteratingAll,\n    ruleConfig,\n  );\n\n  if (\n    settings.ignorePrivate &&\n    !ruleConfig.checkPrivate &&\n    (utils.hasTag('private') || _.filter(jsdoc.tags, {\n      tag: 'access',\n    }).some(({description}) => {\n      return description === 'private';\n    }))\n  ) {\n    return;\n  }\n\n  iterator({\n    context,\n    globalState,\n    indent,\n    iteratingAll,\n    jsdoc,\n    jsdocNode,\n    node,\n    report,\n    settings,\n    sourceCode,\n    state,\n    utils,\n  });\n};\n\n/**\n * Create an eslint rule that iterates over all JSDocs, regardless of whether\n * they are attached to a function-like node.\n *\n * @param {JsdocVisitor} iterator\n * @param {{meta: any}} ruleConfig\n */\nconst iterateAllJsdocs = (iterator, ruleConfig) => {\n  const trackedJsdocs = [];\n\n  const callIterator = (context, node, jsdocNodes, state, lastCall) => {\n    const sourceCode = context.getSourceCode();\n    const settings = getSettings(context);\n    const {lines} = sourceCode;\n\n    const utils = getBasicUtils(context, settings);\n    jsdocNodes.forEach((jsdocNode) => {\n      if (!(/^\\/\\*\\*\\s/).test(sourceCode.getText(jsdocNode))) {\n        return;\n      }\n      iterate(\n        ruleConfig, context, lines, jsdocNode, node,\n        settings, sourceCode, iterator,\n        state, true,\n      );\n    });\n    if (lastCall && ruleConfig.exit) {\n      ruleConfig.exit({\n        context,\n        state,\n        utils,\n      });\n    }\n  };\n\n  return {\n    create (context) {\n      const sourceCode = context.getSourceCode();\n      const settings = getSettings(context);\n      const state = {};\n\n      return {\n        '*:not(Program)' (node) {\n          const reducedNode = getReducedASTNode(node, sourceCode);\n\n          if (node !== reducedNode) {\n            return;\n          }\n\n          const comment = getJSDocComment(sourceCode, node, settings);\n          if (trackedJsdocs.includes(comment)) {\n            return;\n          }\n          if (!comment) {\n            if (ruleConfig.nonComment) {\n              ruleConfig.nonComment({\n                node,\n                state,\n              });\n            }\n\n            return;\n          }\n\n          trackedJsdocs.push(comment);\n          callIterator(context, node, [comment], state);\n        },\n        'Program:exit' () {\n          const allComments = sourceCode.getAllComments();\n          const untrackedJSdoc = allComments.filter((node) => {\n            return !trackedJsdocs.includes(node);\n          });\n\n          callIterator(context, null, untrackedJSdoc, state, true);\n        },\n      };\n    },\n    meta: ruleConfig.meta,\n  };\n};\n\n/**\n * Create an eslint rule that iterates over all JSDocs, regardless of whether\n * they are attached to a function-like node.\n *\n * @param {JsdocVisitor} iterator\n * @param {{meta: any}} ruleConfig\n */\nconst checkFile = (iterator, ruleConfig) => {\n  return {\n    create (context) {\n      const sourceCode = context.getSourceCode();\n      const settings = getSettings(context);\n\n      return {\n        'Program:exit' () {\n          const allComments = sourceCode.getAllComments();\n          const {lines} = sourceCode;\n          const utils = getBasicUtils(context, settings);\n\n          iterator({\n            allComments,\n            context,\n            lines,\n            makeReport,\n            settings,\n            sourceCode,\n            utils,\n          });\n        },\n      };\n    },\n    meta: ruleConfig.meta,\n  };\n};\n\nexport {\n  getSettings,\n  parseComment,\n};\n\n/**\n * @param {JsdocVisitor} iterator\n * @param {{\n *   meta: any,\n *   contextDefaults?: true | string[],\n *   iterateAllJsdocs?: true,\n * }} ruleConfig\n */\nexport default function iterateJsdoc (iterator, ruleConfig) {\n  const metaType = _.get(ruleConfig, 'meta.type');\n  if (!metaType || !['problem', 'suggestion', 'layout'].includes(metaType)) {\n    throw new TypeError('Rule must include `meta.type` option (with value \"problem\", \"suggestion\", or \"layout\")');\n  }\n  if (typeof iterator !== 'function') {\n    throw new TypeError('The iterator argument must be a function.');\n  }\n\n  if (ruleConfig.checkFile) {\n    return checkFile(iterator, ruleConfig);\n  }\n\n  if (ruleConfig.iterateAllJsdocs) {\n    return iterateAllJsdocs(iterator, ruleConfig);\n  }\n\n  return {\n    /**\n     * The entrypoint for the JSDoc rule.\n     *\n     * @param {*} context\n     *   a reference to the context which hold all important information\n     *   like settings and the sourcecode to check.\n     * @returns {object}\n     *   a list with parser callback function.\n     */\n    create (context) {\n      let contexts;\n      if (ruleConfig.contextDefaults) {\n        contexts = jsdocUtils.enforcedContexts(context, ruleConfig.contextDefaults);\n        if (contexts.includes('any')) {\n          return iterateAllJsdocs(iterator, ruleConfig).create(context);\n        }\n      }\n\n      const sourceCode = context.getSourceCode();\n      const settings = getSettings(context);\n      const {lines} = sourceCode;\n\n      const checkJsdoc = (node) => {\n        const jsdocNode = getJSDocComment(sourceCode, node, settings);\n\n        if (!jsdocNode) {\n          return;\n        }\n\n        iterate(\n          ruleConfig, context, lines, jsdocNode, node,\n          settings, sourceCode, iterator,\n        );\n      };\n\n      if (ruleConfig.contextDefaults) {\n        return jsdocUtils.getContextObject(contexts, checkJsdoc);\n      }\n\n      return {\n        ArrowFunctionExpression: checkJsdoc,\n        FunctionDeclaration: checkJsdoc,\n        FunctionExpression: checkJsdoc,\n      };\n    },\n    meta: ruleConfig.meta,\n  };\n}\n"],"file":"iterateJsdoc.js"}